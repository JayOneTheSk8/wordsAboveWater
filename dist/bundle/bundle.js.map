{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/backdrop.js","webpack:///./src/characters/guy_phelps.js","webpack:///./src/controller.js","webpack:///./src/letterblock.js","webpack:///./src/plank.js","webpack:///./src/player.js","webpack:///./src/water.js","webpack:///./src/wordlist.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,cAAc,mBAAO,CAAC,+BAAS;AAC/B,oBAAoB,mBAAO,CAAC,2CAAe;AAC3C,cAAc,mBAAO,CAAC,+BAAS;AAC/B,kBAAkB,mBAAO,CAAC,+DAAyB;AACnD,mBAAmB,mBAAO,CAAC,yCAAc;AACzC,iBAAiB,mBAAO,CAAC,qCAAY;;;AAGrC;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;;;;;;;;;AC3IA,eAAe,mBAAO,CAAC,kCAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvgBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACtfile":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/backdrop.js\");\n","const Water = require('./water');\nconst LetterBlock = require('./letterblock');\nconst Plank = require('./plank');\nconst GuyPhelps = require('./characters/guy_phelps');\nconst Controller = require('./controller');\nconst WordList = require('./wordlist');\n\n\nlet confirmedWords = document.getElementById('wordlist');\nlet canvas = document.getElementById('backdrop');\nlet score = document.getElementById('score-total');\nlet fragment = document.getElementById('fragment');\nlet context = canvas.getContext('2d');\nlet endAxis = 135;\n\n\nlet wordList = new WordList;\n\nlet guyPhelps = new GuyPhelps(canvas, context, 'Guy Phelps', 100, 770);\nlet controller = new Controller(guyPhelps);\nscore.innerText = guyPhelps.score;\n\nlet startPlank = new Plank(\"left\", guyPhelps, context, 0, 820, 200);\nlet submitPlank = new Plank(\"right\", guyPhelps, context, canvas.width - 80, endAxis - 1, 80);\nlet leapingPlank = new Plank(\"right\", guyPhelps, context, canvas.width - 110, endAxis + 100, 130);\n\nlet a = new LetterBlock(guyPhelps, 'a', 30, 20, context);\nlet c = new LetterBlock(guyPhelps, 'c', 130, 550, context);\nlet d = new LetterBlock(guyPhelps, 'd', 50, 420, context);\nlet e = new LetterBlock(guyPhelps, 'e', 350, 20, context);\nlet g = new LetterBlock(guyPhelps, 'g', 370, 570, context);\nlet h = new LetterBlock(guyPhelps, 'h', 370, 290, context);\nlet i = new LetterBlock(guyPhelps, 'i', 200, 20, context);\nlet n = new LetterBlock(guyPhelps, 'n', 270, 440, context);\nlet r = new LetterBlock(guyPhelps, 'r', 35, 280, context);\nlet s = new LetterBlock(guyPhelps, 's', 120, 150, context);\nlet t = new LetterBlock(guyPhelps, 't', 275, 170, context);\nlet v = new LetterBlock(guyPhelps, 'v', 280, 700, context);\n\nlet water = new Water(context, canvas);\nlet allBlocks = [a, e, i, s, t, r, h, d, n, c, g, v];\nlet allPlanks = [startPlank, submitPlank, leapingPlank];\n\nconst initialise = () => {\n  confirmedWords = document.getElementById('wordlist');\n  canvas = document.getElementById('backdrop');\n  score = document.getElementById('score-total');\n  fragment = document.getElementById('fragment');\n  context = canvas.getContext('2d');\n  endAxis = 135;\n\n  wordList = new WordList;\n\n  guyPhelps = new GuyPhelps(canvas, context, 'Guy Phelps', 100, 770);\n  controller = new Controller(guyPhelps);\n  score.innerText = guyPhelps.score;\n\n  startPlank = new Plank(\"left\", guyPhelps, context, 0, 820, 200);\n  submitPlank = new Plank(\"right\", guyPhelps, context, canvas.width - 80, endAxis - 1, 80);\n  leapingPlank = new Plank(\"right\", guyPhelps, context, canvas.width - 110, endAxis + 100, 130);\n\n  a = new LetterBlock(guyPhelps, 'a', 30, 20, context);\n  c = new LetterBlock(guyPhelps, 'c', 130, 550, context);\n  d = new LetterBlock(guyPhelps, 'd', 50, 420, context);\n  e = new LetterBlock(guyPhelps, 'e', 350, 20, context);\n  g = new LetterBlock(guyPhelps, 'g', 370, 570, context);\n  h = new LetterBlock(guyPhelps, 'h', 370, 290, context);\n  i = new LetterBlock(guyPhelps, 'i', 200, 20, context);\n  n = new LetterBlock(guyPhelps, 'n', 270, 440, context);\n  r = new LetterBlock(guyPhelps, 'r', 35, 280, context);\n  s = new LetterBlock(guyPhelps, 's', 120, 150, context);\n  t = new LetterBlock(guyPhelps, 't', 275, 170, context);\n  v = new LetterBlock(guyPhelps, 'v', 280, 700, context);\n\n  water = new Water(context, canvas);\n  allBlocks = [a, e, i, s, t, r, h, d, n, c, g, v];\n  allPlanks = [startPlank, submitPlank, leapingPlank];\n};\n\nconst draw = () => {\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  controller.buttonPressed();\n  guyPhelps.gravity();\n  guyPhelps.wall();\n  for (let i = 0; i < allPlanks.length; i++) {\n    allPlanks[i].collideCheck();\n  }\n  water.draw();\n  for (let i = 0; i < allPlanks.length; i++) {\n    allPlanks[i].draw();\n  }\n  guyPhelps.draw();\n  for (let i = 0; i < allBlocks.length; i++) {\n    if (water.y < allBlocks[i].y) {\n      allBlocks[i].cover();\n    }\n    allBlocks[i].topCollisionCheck();\n    allBlocks[i].checkTimer();\n    allBlocks[i].draw();\n  }\n  if (water.y < endAxis || guyPhelps.y + guyPhelps.height >= water.y + 7) {\n    alert(\"YOU LOSE!\")\n    initialise();\n    location.reload();\n  }\n  if (guyPhelps.x === 520 && guyPhelps.y === 84) {\n    submitScore(guyPhelps);\n    for (let i = 0; i < allBlocks.length; i++) {\n      allBlocks[i].uncover();\n    }\n  }\n  fragment.innerText = guyPhelps.word.join('');\n  water.raiseWater();\n  window.requestAnimationFrame(draw);\n}\n\nfunction submitScore(player) {\n  const word = player.word.join('');\n  let newScore = 0;\n  for (let i = 0; i < player.values.length; i++) {\n    newScore += player.values[i]\n  }\n  if (wordList.words[word.toLowerCase()]) {\n    player.score += (newScore * word.length);\n    player.resetWords(word);\n    let nextWord = document.createElement('li');\n    nextWord.innerText = word;\n    confirmedWords.append(nextWord);\n\n    score.innerText = player.score;\n    wordList.words[word.toLowerCase()] = false;\n  }\n  player.clearValues();\n  return;\n}\n\n\nwindow.requestAnimationFrame(draw);\nwindow.addEventListener('keydown', controller.keyListener);\nwindow.addEventListener('keyup', controller.keyListener);\n","const Player = require('../player');\n\nclass GuyPhelps extends Player {\n  constructor(canvas, context, name, x, y) {\n    super(canvas, context, name, x, y);\n    this.width = 30;\n    this.height = 50;\n  }\n\n  draw() {\n    this.context.beginPath();\n    this.context.lineWidth = '3';\n    this.context.fillStyle = 'red';\n    this.context.rect(this.x, this.y, this.width, this.height);\n    this.context.fill();\n    this.context.closePath();\n    // this.context.drawImage(this.img, this.startX, this.startY);\n  }\n\n  // bottom() {\n  //   // this.height\n  // }\n\n  gravity() {\n    this.yVelocity += 1.5;\n    this.x += this.xVelocity;\n    this.y += this.yVelocity;\n    this.xVelocity *= 0.9;\n    this.yVelocity *= 0.9;\n  }\n}\n\nmodule.exports = GuyPhelps;\n","class Controller {\n  constructor(player) {\n    this.left = false;\n    this.right = false;\n    this.up = false;\n    this.player = player;\n    this.keyListener = this.keyListener.bind(this);\n  }\n\n  keyListener(event) {\n    const keyState = (event.type === 'keydown' ? true : false);\n    switch (event.keyCode) {\n      case 32: // spacebar\n      case 38: // up\n        this.up = keyState;\n        break;\n      case 37: // left\n        this.left = keyState;\n        break;\n      case 39: //right\n        this.right = keyState;\n        break;\n      default:\n        break;\n    }\n  }\n\n  buttonPressed() {\n    if (this.up && this.player.jumping === false) {\n      this.player.yVelocity -= 35;\n      this.player.jumping = true;\n    } else if (this.left) {\n      this.player.xVelocity -= 0.6;\n    } else if (this.right) {\n      this.player.xVelocity += 0.6;\n    }\n  }\n}\n\nmodule.exports = Controller;\n","class LetterBlock {\n  constructor(player, letter, x, y, context) {\n    this.player = player;\n    this.color = 'orange';\n    this.context = context;\n    this.x = x;\n    this.y = y;\n    this.letter = letter.toUpperCase();\n    this.value = this.values()[letter.toUpperCase()];\n    this.width = 50;\n    this.height = 50;\n    this.timer = 1;\n    this.landed = false;\n  }\n\n  draw() {\n    this.context.beginPath();\n    this.context.fillStyle = this.color;\n    this.context.strokeStyle = 'black';\n    this.context.lineWidth = '6';\n    this.context.shadowBlur = 0;\n    this.context.rect(this.x, this.y, this.width, this.height);\n    this.context.stroke();\n    this.context.fill();\n    this.context.closePath();\n    this.drawLetter();\n  }\n\n  drawLetter() {\n    this.context.beginPath();\n    this.context.font = 'bold 30px Arial';\n    this.context.fillStyle = 'white';\n    this.context.fillText(\n      this.letter,\n      this.x + this.letterPos()[this.letter],\n      this.y + 35\n    );\n    this.context.closePath();\n  }\n\n  cover() {\n    this.color = 'grey';\n  }\n\n  uncover() {\n    this.color = 'orange';\n    this.landed = false;\n  }\n\n  checkTimer(){\n    if (this.timer === 50 && this.color === 'orange') {\n      this.cover();\n      this.player.addLetter(this.letter, this.value);\n      console.log(this.player.word.join(''));\n      this.timer = 0;\n    }\n  }\n\n  topCollisionCheck() {\n    if (this.player.x + this.player.width >= this.x && this.player.x <= this.x + this.width) {\n      if (this.player.y < this.y) {\n        if (this.y - this.player.y <= this.player.height) {\n          this.player.jumping = false;\n          this.player.y = this.y - this.player.height;\n          this.player.yVelocity = 0;\n          this.timer++;\n          if (this.landed === false) {\n            this.landed = true;\n          }\n          return;\n        }\n      }\n    }\n    this.landed = false;\n    this.timer = 0;\n  }\n\n  letterPos() {\n    return {\n      A: 14,\n      B: 14,\n      C: 14,\n      D: 14,\n      E: 14,\n      F: 15,\n      G: 13,\n      H: 14,\n      I: 20,\n      J: 16,\n      K: 14,\n      L: 16,\n      M: 13,\n      N: 15,\n      O: 13,\n      P: 15,\n      Q: 13,\n      R: 13,\n      S: 15,\n      T: 15.5,\n      U: 14,\n      V: 15,\n      W: 11,\n      X: 14,\n      Y: 14.5,\n      Z: 15,\n    };\n  }\n\n  values() {\n    return {\n      A: 1,\n      B: 3,\n      C: 3,\n      D: 2,\n      E: 1,\n      F: 4,\n      G: 2,\n      H: 4,\n      I: 1,\n      J: 8,\n      K: 5,\n      L: 1,\n      M: 3,\n      N: 1,\n      O: 1,\n      P: 3,\n      Q: 10,\n      R: 1,\n      S: 1,\n      T: 1,\n      U: 1,\n      V: 4,\n      W: 4,\n      X: 8,\n      Y: 4,\n      Z: 10,\n    };\n  }\n}\n\nmodule.exports = LetterBlock;\n","class Plank {\n  constructor(side, player, context, x, y, width) {\n    this.side = side;\n    this.player = player;\n    this.context = context;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n  }\n\n  draw() {\n    this.context.beginPath();\n    this.context.shadowBlur = 0;\n    this.context.moveTo(this.x, this.y);\n    this.context.lineTo(this.x + this.width, this.y);\n    this.context.lineWidth = '8';\n    this.context.strokeStyle = '#A85331';\n    this.context.stroke();\n    this.context.closePath();\n  }\n\n  collideCheck() {\n    if (this.side === \"left\") {\n      if (this.x <= this.player.x && this.player.x < this.x + this.width) {\n        if (this.player.y + this.player.height >= this.y) {\n          this.player.jumping = false;\n          this.player.y = this.y - this.player.height;\n          this.player.yVelocity = 0;\n        }\n      }\n    } else {\n      if (this.player.x + this.player.width >= this.x) {\n        if (this.player.y < this.y && this.y - this.player.y <= this.player.height) {\n          this.player.jumping = false;\n          this.player.y = this.y - this.player.height;\n          this.player.yVelocity = 0;\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = Plank;\n","class Player {\n  constructor(canvas, context, name, x, y) {\n    this.canvas = canvas;\n    this.context = context;\n    this.name = name;\n    this.x = x;\n    this.y = y;\n    this.jumping = false\n    this.xVelocity = 0;\n    this.yVelocity = 0;\n    this.word = [];\n    this.values = [];\n    this.wordList = [];\n    this.score = 0;\n  }\n\n  wall() {\n    if (this.x <= 0) {\n      this.xVelocity = 0;\n      this.x = 0;\n    } else if (this.x + this.width >= this.canvas.width) {\n      this.xVelocity = 0;\n      this.x = this.canvas.width - this.width;\n    }\n  }\n\n  addLetter(letter, value){\n    this.word.push(letter);\n    this.values.push(value);\n  }\n\n  clearValues() {\n    this.word = [];\n    this.values = [];\n  }\n\n  resetWords(word) {\n    if (!word) { return null; }\n    this.wordList.push(word);\n    this.word = [];\n    this.values = [];\n  }\n}\n\nmodule.exports = Player;\n","class Water {\n  constructor(context, canvas) {\n    this.context = context;\n    this.canvas = canvas;\n    this.x = 0;\n    this.y = 900;\n  }\n\n  draw() {\n    this.context.beginPath();\n    this.context.fillStyle = '#009BFE';\n    this.context.shadowColor = '#009BFE';\n    this.context.shadowBlur = 13;\n    this.context.fillRect(this.x, this.y, this.canvas.width, this.canvas.height);\n  }\n\n  raiseWater() {\n    const waterCurrent = (this.y >= this.canvas.height / 2 ? (900 * 0.0001) :  (1200 * 0.0001))\n    this.y -= waterCurrent;\n  }\n}\n\nmodule.exports = Water;\n","class WordList {\n  constructor() {\n    this.words =\n    {\n    aced: true,\n    acers: true,\n    aces: true,\n    ache: true,\n    ached: true,\n    acher: true,\n    aches: true,\n    achier: true,\n    achiest: true,\n    aching: true,\n    acid: true,\n    acids: true,\n    acing: true,\n    acne: true,\n    acned: true,\n    acnes: true,\n    acre: true,\n    acres: true,\n    acrid: true,\n    acted: true,\n    acter: true,\n    actin: true,\n    acting: true,\n    actins: true,\n    active: true,\n    activer: true,\n    actives: true,\n    acts: true,\n    adhering: true,\n    advent: true,\n    advents: true,\n    advert: true,\n    adverting: true,\n    adverts: true,\n    advice: true,\n    advices: true,\n    advise: true,\n    adviser: true,\n    aged: true,\n    agent: true,\n    agents: true,\n    ages: true,\n    agin: true,\n    agrin: true,\n    aide: true,\n    aider: true,\n    aiders: true,\n    aides: true,\n    aids: true,\n    aigret: true,\n    aigrets: true,\n    aired: true,\n    airs: true,\n    aitch: true,\n    aitches: true,\n    ands: true,\n    anger: true,\n    angers: true,\n    angriest: true,\n    angst: true,\n    angstier: true,\n    anhedric: true,\n    anise: true,\n    ante: true,\n    anther: true,\n    antherid: true,\n    antherids: true,\n    anthers: true,\n    antic: true,\n    antics: true,\n    ants: true,\n    antsier: true,\n    arced: true,\n    arch: true,\n    arched: true,\n    arches: true,\n    arching: true,\n    archings: true,\n    archive: true,\n    archived: true,\n    archives: true,\n    arcing: true,\n    arcs: true,\n    arcsine: true,\n    ardent: true,\n    ares: true,\n    argent: true,\n    argentic: true,\n    argents: true,\n    arid: true,\n    aridest: true,\n    aright: true,\n    arise: true,\n    arisen: true,\n    arsenic: true,\n    arshin: true,\n    arshine: true,\n    arts: true,\n    ascend: true,\n    ascent: true,\n    ashed: true,\n    ashen: true,\n    asher: true,\n    ashier: true,\n    ashing: true,\n    aside: true,\n    aster: true,\n    astern: true,\n    astir: true,\n    astride: true,\n    aven: true,\n    avens: true,\n    aver: true,\n    avers: true,\n    avert: true,\n    averting: true,\n    averts: true,\n    avid: true,\n    avider: true,\n    avidest: true,\n    cadet: true,\n    cadets: true,\n    cadge: true,\n    cadre: true,\n    cads: true,\n    cage: true,\n    caged: true,\n    cages: true,\n    cagier: true,\n    cagiest: true,\n    cairn: true,\n    cairned: true,\n    cairns: true,\n    candies: true,\n    cane: true,\n    caned: true,\n    caner: true,\n    caners: true,\n    canes: true,\n    canid: true,\n    canids: true,\n    canister: true,\n    cans: true,\n    canst: true,\n    cant: true,\n    canted: true,\n    canter: true,\n    canters: true,\n    cantred: true,\n    cantreds: true,\n    cants: true,\n    card: true,\n    carding: true,\n    cards: true,\n    care: true,\n    cared: true,\n    cares: true,\n    caret: true,\n    carets: true,\n    caries: true,\n    caring: true,\n    carnies: true,\n    cars: true,\n    cart: true,\n    carted: true,\n    carting: true,\n    cartings: true,\n    carts: true,\n    carve: true,\n    carved: true,\n    carves: true,\n    carving: true,\n    carvings: true,\n    case: true,\n    cased: true,\n    casein: true,\n    cash: true,\n    cashed: true,\n    casher: true,\n    cashier: true,\n    cashing: true,\n    casing: true,\n    cast: true,\n    caste: true,\n    casted: true,\n    caster: true,\n    casting: true,\n    cater: true,\n    catering: true,\n    caterings: true,\n    caters: true,\n    cats: true,\n    cave: true,\n    caved: true,\n    caver: true,\n    cavern: true,\n    caverns: true,\n    cavers: true,\n    caves: true,\n    caving: true,\n    ceasing: true,\n    cedar: true,\n    cedars: true,\n    cedi: true,\n    ceding: true,\n    cedis: true,\n    cent: true,\n    cents: true,\n    cering: true,\n    certain: true,\n    certs: true,\n    cervid: true,\n    cervids: true,\n    chad: true,\n    chagrin: true,\n    chagrined: true,\n    chagrins: true,\n    chain: true,\n    chained: true,\n    chainer: true,\n    chainers: true,\n    chains: true,\n    chair: true,\n    chaired: true,\n    chairs: true,\n    chaise: true,\n    change: true,\n    changed: true,\n    changer: true,\n    changers: true,\n    changes: true,\n    chant: true,\n    chanted: true,\n    chanter: true,\n    chanters: true,\n    chants: true,\n    char: true,\n    chard: true,\n    chards: true,\n    charge: true,\n    charged: true,\n    charges: true,\n    chariest: true,\n    chars: true,\n    chart: true,\n    charted: true,\n    charting: true,\n    chartings: true,\n    charts: true,\n    chase: true,\n    chased: true,\n    chaser: true,\n    chasing: true,\n    chaste: true,\n    chasten: true,\n    chaster: true,\n    chat: true,\n    chats: true,\n    cheat: true,\n    cheating: true,\n    cheats: true,\n    chert: true,\n    cherts: true,\n    chest: true,\n    chide: true,\n    chides: true,\n    chin: true,\n    china: true,\n    chinas: true,\n    chins: true,\n    chis: true,\n    chiv: true,\n    chive: true,\n    chives: true,\n    chivs: true,\n    christen: true,\n    cider: true,\n    ciders: true,\n    cigar: true,\n    cigars: true,\n    cinder: true,\n    cinders: true,\n    cistern: true,\n    cite: true,\n    cited: true,\n    citer: true,\n    citers: true,\n    cites: true,\n    cither: true,\n    cithern: true,\n    citherns: true,\n    cithers: true,\n    civet: true,\n    civets: true,\n    cnida: true,\n    cnidae: true,\n    cnidas: true,\n    crag: true,\n    crags: true,\n    crane: true,\n    craned: true,\n    cranes: true,\n    crash: true,\n    crashdive: true,\n    crashed: true,\n    crashing: true,\n    crate: true,\n    crated: true,\n    crates: true,\n    crating: true,\n    crave: true,\n    craved: true,\n    craves: true,\n    craving: true,\n    cravings: true,\n    creasing: true,\n    creating: true,\n    credit: true,\n    credits: true,\n    crest: true,\n    cresting: true,\n    cretin: true,\n    cretins: true,\n    cried: true,\n    cries: true,\n    cringe: true,\n    cringed: true,\n    cringes: true,\n    crista: true,\n    cristae: true,\n    dacite: true,\n    dacites: true,\n    dance: true,\n    dancer: true,\n    dancers: true,\n    dances: true,\n    danger: true,\n    dangers: true,\n    danish: true,\n    dare: true,\n    dares: true,\n    daring: true,\n    darn: true,\n    darns: true,\n    dart: true,\n    darting: true,\n    darts: true,\n    dash: true,\n    dasher: true,\n    dashing: true,\n    date: true,\n    dater: true,\n    daters: true,\n    dates: true,\n    dating: true,\n    dative: true,\n    davit: true,\n    davits: true,\n    deair: true,\n    deairs: true,\n    dean: true,\n    deans: true,\n    dear: true,\n    dears: true,\n    dearth: true,\n    dearths: true,\n    deash: true,\n    deashing: true,\n    death: true,\n    deaths: true,\n    deaving: true,\n    decant: true,\n    decants: true,\n    decart: true,\n    degarnish: true,\n    degas: true,\n    dehair: true,\n    deign: true,\n    deist: true,\n    denar: true,\n    denars: true,\n    dens: true,\n    dent: true,\n    dents: true,\n    deraign: true,\n    dervish: true,\n    descant: true,\n    design: true,\n    destain: true,\n    detach: true,\n    detaching: true,\n    detain: true,\n    detains: true,\n    detrain: true,\n    detrains: true,\n    deva: true,\n    devas: true,\n    deviant: true,\n    deviants: true,\n    diarch: true,\n    dice: true,\n    dicer: true,\n    dicers: true,\n    dices: true,\n    dies: true,\n    diet: true,\n    diets: true,\n    digest: true,\n    digs: true,\n    dinar: true,\n    dinars: true,\n    dine: true,\n    diner: true,\n    diners: true,\n    dines: true,\n    ding: true,\n    dinger: true,\n    dings: true,\n    dins: true,\n    dint: true,\n    dints: true,\n    dire: true,\n    direct: true,\n    directs: true,\n    direst: true,\n    dirge: true,\n    dirges: true,\n    dirt: true,\n    dirts: true,\n    disc: true,\n    discant: true,\n    discanter: true,\n    discern: true,\n    discharge: true,\n    disgrace: true,\n    dish: true,\n    dishrag: true,\n    disrate: true,\n    distance: true,\n    ditch: true,\n    ditcher: true,\n    ditchers: true,\n    ditches: true,\n    dither: true,\n    dithers: true,\n    diva: true,\n    divan: true,\n    divans: true,\n    divas: true,\n    dive: true,\n    diver: true,\n    divers: true,\n    divert: true,\n    diverts: true,\n    dives: true,\n    divest: true,\n    drag: true,\n    dragnet: true,\n    dragnets: true,\n    drags: true,\n    drain: true,\n    drains: true,\n    drastic: true,\n    dreg: true,\n    dregs: true,\n    drench: true,\n    dries: true,\n    driest: true,\n    drive: true,\n    driven: true,\n    drives: true,\n    each: true,\n    earn: true,\n    earns: true,\n    ears: true,\n    earth: true,\n    earthing: true,\n    earths: true,\n    easing: true,\n    east: true,\n    eating: true,\n    eats: true,\n    echidna: true,\n    echidnas: true,\n    edict: true,\n    edicts: true,\n    edit: true,\n    edits: true,\n    eight: true,\n    eights: true,\n    enact: true,\n    enacts: true,\n    ends: true,\n    enrich: true,\n    eras: true,\n    erasing: true,\n    ergs: true,\n    eschar: true,\n    etas: true,\n    etch: true,\n    etching: true,\n    etchings: true,\n    ethic: true,\n    ethics: true,\n    ethnic: true,\n    ethnics: true,\n    evading: true,\n    evict: true,\n    evicts: true,\n    gain: true,\n    gained: true,\n    gainer: true,\n    gainers: true,\n    gains: true,\n    gait: true,\n    gaited: true,\n    gaiter: true,\n    gaiters: true,\n    gaits: true,\n    gander: true,\n    ganders: true,\n    ganev: true,\n    ganevs: true,\n    ganister: true,\n    gantries: true,\n    garden: true,\n    gardens: true,\n    garish: true,\n    garnet: true,\n    garnets: true,\n    garnish: true,\n    garnished: true,\n    gash: true,\n    gashed: true,\n    gasher: true,\n    gastric: true,\n    gastrin: true,\n    gate: true,\n    gated: true,\n    gates: true,\n    gather: true,\n    gathers: true,\n    gave: true,\n    gear: true,\n    gears: true,\n    geisha: true,\n    gent: true,\n    gents: true,\n    gets: true,\n    giant: true,\n    giants: true,\n    gins: true,\n    gird: true,\n    girds: true,\n    girn: true,\n    girned: true,\n    girns: true,\n    girth: true,\n    girths: true,\n    gist: true,\n    give: true,\n    given: true,\n    givens: true,\n    giver: true,\n    givers: true,\n    gives: true,\n    gnar: true,\n    gnars: true,\n    gnash: true,\n    gnashed: true,\n    gnasher: true,\n    gnat: true,\n    gnats: true,\n    grace: true,\n    graced: true,\n    graces: true,\n    grade: true,\n    grades: true,\n    gradient: true,\n    gradients: true,\n    grads: true,\n    grain: true,\n    grained: true,\n    grains: true,\n    grand: true,\n    grandest: true,\n    grands: true,\n    granite: true,\n    granites: true,\n    grant: true,\n    granted: true,\n    grants: true,\n    grate: true,\n    grated: true,\n    grates: true,\n    gratis: true,\n    grave: true,\n    graved: true,\n    graven: true,\n    graves: true,\n    gravest: true,\n    gravid: true,\n    gravies: true,\n    great: true,\n    greats: true,\n    grid: true,\n    grids: true,\n    grin: true,\n    grinch: true,\n    grinches: true,\n    grind: true,\n    grinds: true,\n    grins: true,\n    grist: true,\n    grit: true,\n    grits: true,\n    hades: true,\n    hadst: true,\n    hagride: true,\n    hagrides: true,\n    hags: true,\n    hair: true,\n    haired: true,\n    hairnet: true,\n    hairnets: true,\n    hairs: true,\n    hand: true,\n    hander: true,\n    handers: true,\n    handier: true,\n    handiest: true,\n    handrest: true,\n    hands: true,\n    handset: true,\n    hang: true,\n    hanged: true,\n    hanger: true,\n    hangers: true,\n    hangs: true,\n    hard: true,\n    harden: true,\n    hardens: true,\n    hardest: true,\n    hardiest: true,\n    hards: true,\n    hare: true,\n    hared: true,\n    hares: true,\n    harvest: true,\n    harvesting: true,\n    haste: true,\n    hasted: true,\n    hasten: true,\n    hastier: true,\n    hate: true,\n    hated: true,\n    hater: true,\n    haters: true,\n    hates: true,\n    hating: true,\n    hatred: true,\n    hatreds: true,\n    hats: true,\n    have: true,\n    haven: true,\n    havens: true,\n    haves: true,\n    having: true,\n    head: true,\n    heading: true,\n    headings: true,\n    heads: true,\n    hear: true,\n    heard: true,\n    hearing: true,\n    hearings: true,\n    hears: true,\n    heart: true,\n    hearts: true,\n    heat: true,\n    heating: true,\n    heats: true,\n    heaving: true,\n    heir: true,\n    heirs: true,\n    heist: true,\n    hens: true,\n    herd: true,\n    herding: true,\n    herds: true,\n    hernia: true,\n    hernias: true,\n    hers: true,\n    hics: true,\n    hide: true,\n    hider: true,\n    hiders: true,\n    hides: true,\n    hind: true,\n    hinder: true,\n    hinders: true,\n    hinds: true,\n    hinge: true,\n    hinged: true,\n    hinges: true,\n    hint: true,\n    hinted: true,\n    hinter: true,\n    hints: true,\n    hire: true,\n    hired: true,\n    hires: true,\n    hits: true,\n    hive: true,\n    hived: true,\n    hiver: true,\n    hives: true,\n    iced: true,\n    icer: true,\n    icers: true,\n    ices: true,\n    idea: true,\n    ideas: true,\n    idents: true,\n    ides: true,\n    incar: true,\n    incase: true,\n    incased: true,\n    incest: true,\n    inch: true,\n    inched: true,\n    incher: true,\n    inchers: true,\n    inches: true,\n    inert: true,\n    ingest: true,\n    ingrate: true,\n    ingrates: true,\n    inreach: true,\n    insect: true,\n    insert: true,\n    inset: true,\n    instar: true,\n    instead: true,\n    inter: true,\n    invade: true,\n    invader: true,\n    invaders: true,\n    invades: true,\n    invect: true,\n    invects: true,\n    invert: true,\n    inverts: true,\n    invest: true,\n    irate: true,\n    ired: true,\n    ires: true,\n    itch: true,\n    itched: true,\n    itches: true,\n    nadir: true,\n    nags: true,\n    naive: true,\n    naiver: true,\n    naivest: true,\n    nares: true,\n    nastier: true,\n    native: true,\n    natives: true,\n    nave: true,\n    naves: true,\n    navies: true,\n    near: true,\n    nears: true,\n    neat: true,\n    nectar: true,\n    nectars: true,\n    neigh: true,\n    neighs: true,\n    nerd: true,\n    nerds: true,\n    nest: true,\n    nets: true,\n    nevi: true,\n    nice: true,\n    nicer: true,\n    nicest: true,\n    niche: true,\n    niches: true,\n    nicht: true,\n    nigh: true,\n    night: true,\n    nights: true,\n    nits: true,\n    race: true,\n    raced: true,\n    races: true,\n    rachet: true,\n    rachides: true,\n    rachis: true,\n    raciest: true,\n    racing: true,\n    racist: true,\n    radices: true,\n    radish: true,\n    rage: true,\n    raged: true,\n    rages: true,\n    rags: true,\n    raid: true,\n    raids: true,\n    rain: true,\n    rained: true,\n    rains: true,\n    raise: true,\n    raised: true,\n    ranch: true,\n    ranched: true,\n    ranches: true,\n    rancid: true,\n    rancidest: true,\n    rand: true,\n    randiest: true,\n    rands: true,\n    rang: true,\n    range: true,\n    ranged: true,\n    ranges: true,\n    rangiest: true,\n    ranid: true,\n    ranids: true,\n    rant: true,\n    ranted: true,\n    rants: true,\n    rash: true,\n    rate: true,\n    rated: true,\n    rates: true,\n    rating: true,\n    ratings: true,\n    rats: true,\n    rave: true,\n    raved: true,\n    raven: true,\n    ravens: true,\n    raves: true,\n    ravine: true,\n    ravines: true,\n    raving: true,\n    ravings: true,\n    ravish: true,\n    ravished: true,\n    reach: true,\n    reaching: true,\n    react: true,\n    reacting: true,\n    reacts: true,\n    read: true,\n    reading: true,\n    readings: true,\n    reads: true,\n    reagin: true,\n    reast: true,\n    reasting: true,\n    reaving: true,\n    recant: true,\n    recants: true,\n    recast: true,\n    recasting: true,\n    rechain: true,\n    rechains: true,\n    redact: true,\n    redacting: true,\n    redacts: true,\n    redating: true,\n    reds: true,\n    regain: true,\n    regains: true,\n    regas: true,\n    rehang: true,\n    rehangs: true,\n    rehid: true,\n    reign: true,\n    reigns: true,\n    rein: true,\n    reins: true,\n    rend: true,\n    rends: true,\n    rent: true,\n    rents: true,\n    resaid: true,\n    resand: true,\n    resat: true,\n    resaving: true,\n    rescan: true,\n    rescind: true,\n    resh: true,\n    reshaving: true,\n    resight: true,\n    resign: true,\n    resin: true,\n    resit: true,\n    rest: true,\n    restain: true,\n    resting: true,\n    retag: true,\n    retags: true,\n    retain: true,\n    retains: true,\n    retch: true,\n    retching: true,\n    retina: true,\n    retinas: true,\n    revs: true,\n    rhetic: true,\n    rice: true,\n    riced: true,\n    rices: true,\n    rich: true,\n    riches: true,\n    richest: true,\n    ride: true,\n    rides: true,\n    ridge: true,\n    ridges: true,\n    rids: true,\n    right: true,\n    righted: true,\n    rights: true,\n    rigs: true,\n    rind: true,\n    rinds: true,\n    ring: true,\n    ringed: true,\n    rings: true,\n    rinse: true,\n    rinsed: true,\n    rise: true,\n    risen: true,\n    rite: true,\n    rited: true,\n    rites: true,\n    rive: true,\n    rived: true,\n    riven: true,\n    rives: true,\n    rivet: true,\n    rivets: true,\n    sachet: true,\n    sacred: true,\n    sadhe: true,\n    sage: true,\n    sager: true,\n    sagier: true,\n    said: true,\n    saint: true,\n    sainted: true,\n    saith: true,\n    sand: true,\n    sander: true,\n    sandier: true,\n    sane: true,\n    saner: true,\n    sang: true,\n    sard: true,\n    sardine: true,\n    sari: true,\n    sarin: true,\n    sate: true,\n    sated: true,\n    satin: true,\n    sating: true,\n    satire: true,\n    save: true,\n    saved: true,\n    saver: true,\n    saving: true,\n    scan: true,\n    scant: true,\n    scanter: true,\n    scantier: true,\n    scar: true,\n    scare: true,\n    scared: true,\n    scaring: true,\n    scat: true,\n    scathe: true,\n    scathed: true,\n    scathing: true,\n    scent: true,\n    scrag: true,\n    scried: true,\n    sear: true,\n    search: true,\n    searching: true,\n    searing: true,\n    seat: true,\n    seating: true,\n    secant: true,\n    sect: true,\n    sedan: true,\n    sedating: true,\n    seitan: true,\n    send: true,\n    sent: true,\n    sera: true,\n    serac: true,\n    sering: true,\n    servant: true,\n    serving: true,\n    seta: true,\n    shade: true,\n    shader: true,\n    shadier: true,\n    shading: true,\n    shard: true,\n    share: true,\n    shared: true,\n    sharing: true,\n    shave: true,\n    shaved: true,\n    shaven: true,\n    shaver: true,\n    shaving: true,\n    shear: true,\n    shearing: true,\n    shed: true,\n    shied: true,\n    shier: true,\n    shin: true,\n    shine: true,\n    shined: true,\n    shiner: true,\n    shire: true,\n    shirt: true,\n    shirted: true,\n    shiv: true,\n    shiver: true,\n    shred: true,\n    shrine: true,\n    shrined: true,\n    shrive: true,\n    side: true,\n    sidecar: true,\n    sigh: true,\n    sighed: true,\n    sigher: true,\n    sight: true,\n    sighted: true,\n    sighter: true,\n    sightread: true,\n    sign: true,\n    signed: true,\n    signer: true,\n    signet: true,\n    since: true,\n    sine: true,\n    sing: true,\n    singe: true,\n    singed: true,\n    singer: true,\n    sinter: true,\n    sire: true,\n    sired: true,\n    siren: true,\n    sitar: true,\n    site: true,\n    sited: true,\n    snag: true,\n    snare: true,\n    snared: true,\n    snatch: true,\n    snatched: true,\n    snatcher: true,\n    snide: true,\n    snider: true,\n    snit: true,\n    snitch: true,\n    snitched: true,\n    snitcher: true,\n    sringa: true,\n    stag: true,\n    stage: true,\n    staged: true,\n    stager: true,\n    stagier: true,\n    staid: true,\n    stain: true,\n    stained: true,\n    stainer: true,\n    stair: true,\n    stance: true,\n    stanch: true,\n    stanched: true,\n    stancher: true,\n    stand: true,\n    stander: true,\n    star: true,\n    starch: true,\n    starched: true,\n    starching: true,\n    stare: true,\n    stared: true,\n    staring: true,\n    starve: true,\n    starved: true,\n    starving: true,\n    stave: true,\n    staved: true,\n    staving: true,\n    stead: true,\n    stein: true,\n    stench: true,\n    stern: true,\n    sterna: true,\n    stevia: true,\n    sting: true,\n    stinger: true,\n    stir: true,\n    stive: true,\n    stived: true,\n    stiver: true,\n    strain: true,\n    strained: true,\n    strand: true,\n    strange: true,\n    stride: true,\n    string: true,\n    stringed: true,\n    strive: true,\n    strived: true,\n    striven: true,\n    tags: true,\n    tangier: true,\n    tans: true,\n    tare: true,\n    tares: true,\n    tarn: true,\n    tarnish: true,\n    tarnished: true,\n    tarns: true,\n    tars: true,\n    tarsi: true,\n    taser: true,\n    tasering: true,\n    tavern: true,\n    taverns: true,\n    teach: true,\n    teaching: true,\n    teachings: true,\n    tear: true,\n    tearing: true,\n    tears: true,\n    teas: true,\n    teasing: true,\n    tech: true,\n    techs: true,\n    tend: true,\n    tends: true,\n    tens: true,\n    tern: true,\n    terns: true,\n    than: true,\n    their: true,\n    theirs: true,\n    then: true,\n    thens: true,\n    thin: true,\n    thine: true,\n    thing: true,\n    things: true,\n    thins: true,\n    third: true,\n    thirds: true,\n    this: true,\n    thread: true,\n    threading: true,\n    threads: true,\n    thrice: true,\n    thrive: true,\n    thrived: true,\n    thrives: true,\n    tics: true,\n    tide: true,\n    tides: true,\n    tied: true,\n    tier: true,\n    tiers: true,\n    ties: true,\n    tiger: true,\n    tigers: true,\n    tinder: true,\n    tinders: true,\n    tine: true,\n    tinea: true,\n    tined: true,\n    tines: true,\n    ting: true,\n    tinge: true,\n    tinged: true,\n    tinger: true,\n    tinges: true,\n    tings: true,\n    tins: true,\n    tirade: true,\n    tirades: true,\n    tire: true,\n    tired: true,\n    tires: true,\n    trace: true,\n    traced: true,\n    traces: true,\n    tracheid: true,\n    tracheids: true,\n    tracing: true,\n    tracings: true,\n    trade: true,\n    tradein: true,\n    tradeins: true,\n    trades: true,\n    trading: true,\n    tradings: true,\n    tragic: true,\n    train: true,\n    trained: true,\n    trains: true,\n    trance: true,\n    tranced: true,\n    trances: true,\n    tranche: true,\n    tranches: true,\n    trash: true,\n    trashed: true,\n    trashing: true,\n    tread: true,\n    treading: true,\n    treads: true,\n    trench: true,\n    trend: true,\n    trends: true,\n    triad: true,\n    triads: true,\n    triage: true,\n    triages: true,\n    tried: true,\n    tries: true,\n    tsadi: true,\n    tsar: true,\n    vain: true,\n    vainer: true,\n    vainest: true,\n    vane: true,\n    vaned: true,\n    vanes: true,\n    vang: true,\n    vanish: true,\n    vanished: true,\n    vanisher: true,\n    vans: true,\n    varices: true,\n    varied: true,\n    varies: true,\n    varnish: true,\n    varnished: true,\n    vase: true,\n    vast: true,\n    vaster: true,\n    vats: true,\n    vear: true,\n    vearing: true,\n    vears: true,\n    vegan: true,\n    vegans: true,\n    vein: true,\n    veins: true,\n    vend: true,\n    vends: true,\n    vent: true,\n    vents: true,\n    verdict: true,\n    verdicts: true,\n    verist: true,\n    veritas: true,\n    versing: true,\n    vesicant: true,\n    vest: true,\n    vesting: true,\n    vetch: true,\n    vets: true,\n    vicar: true,\n    vicars: true,\n    vice: true,\n    vices: true,\n    vied: true,\n    vies: true,\n    vinca: true,\n    vincas: true,\n    vine: true,\n    vined: true,\n    vinegar: true,\n    vinegars: true,\n    vines: true,\n    vintage: true,\n    vintages: true,\n    visa: true,\n    visage: true,\n    viscera: true,\n    vise: true,\n    vised: true,\n    vista: true,\n    vita: true,\n    vitae: true,\n    vraic: true,\n    vraiced: true,\n    vraics: true,\n    }\n  }\n}\n\nmodule.exports = WordList;\n"],"sourceRoot":""}